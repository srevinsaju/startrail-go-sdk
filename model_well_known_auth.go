/*
startrail-service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the WellKnownAuth type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WellKnownAuth{}

// WellKnownAuth struct for WellKnownAuth
type WellKnownAuth struct {
	Audience NullableString `json:"audience,omitempty"`
	ClientId string `json:"client_id"`
	Device WellKnownDeviceAuth `json:"device"`
	Enabled *bool `json:"enabled,omitempty"`
	Issuer string `json:"issuer"`
	JwksUrl string `json:"jwks_url"`
	Scopes []string `json:"scopes,omitempty"`
}

type _WellKnownAuth WellKnownAuth

// NewWellKnownAuth instantiates a new WellKnownAuth object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWellKnownAuth(clientId string, device WellKnownDeviceAuth, issuer string, jwksUrl string) *WellKnownAuth {
	this := WellKnownAuth{}
	this.ClientId = clientId
	this.Device = device
	this.Issuer = issuer
	this.JwksUrl = jwksUrl
	return &this
}

// NewWellKnownAuthWithDefaults instantiates a new WellKnownAuth object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWellKnownAuthWithDefaults() *WellKnownAuth {
	this := WellKnownAuth{}
	return &this
}

// GetAudience returns the Audience field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WellKnownAuth) GetAudience() string {
	if o == nil || IsNil(o.Audience.Get()) {
		var ret string
		return ret
	}
	return *o.Audience.Get()
}

// GetAudienceOk returns a tuple with the Audience field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WellKnownAuth) GetAudienceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Audience.Get(), o.Audience.IsSet()
}

// HasAudience returns a boolean if a field has been set.
func (o *WellKnownAuth) HasAudience() bool {
	if o != nil && o.Audience.IsSet() {
		return true
	}

	return false
}

// SetAudience gets a reference to the given NullableString and assigns it to the Audience field.
func (o *WellKnownAuth) SetAudience(v string) {
	o.Audience.Set(&v)
}
// SetAudienceNil sets the value for Audience to be an explicit nil
func (o *WellKnownAuth) SetAudienceNil() {
	o.Audience.Set(nil)
}

// UnsetAudience ensures that no value is present for Audience, not even an explicit nil
func (o *WellKnownAuth) UnsetAudience() {
	o.Audience.Unset()
}

// GetClientId returns the ClientId field value
func (o *WellKnownAuth) GetClientId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value
// and a boolean to check if the value has been set.
func (o *WellKnownAuth) GetClientIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClientId, true
}

// SetClientId sets field value
func (o *WellKnownAuth) SetClientId(v string) {
	o.ClientId = v
}

// GetDevice returns the Device field value
func (o *WellKnownAuth) GetDevice() WellKnownDeviceAuth {
	if o == nil {
		var ret WellKnownDeviceAuth
		return ret
	}

	return o.Device
}

// GetDeviceOk returns a tuple with the Device field value
// and a boolean to check if the value has been set.
func (o *WellKnownAuth) GetDeviceOk() (*WellKnownDeviceAuth, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Device, true
}

// SetDevice sets field value
func (o *WellKnownAuth) SetDevice(v WellKnownDeviceAuth) {
	o.Device = v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *WellKnownAuth) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WellKnownAuth) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *WellKnownAuth) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *WellKnownAuth) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetIssuer returns the Issuer field value
func (o *WellKnownAuth) GetIssuer() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Issuer
}

// GetIssuerOk returns a tuple with the Issuer field value
// and a boolean to check if the value has been set.
func (o *WellKnownAuth) GetIssuerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Issuer, true
}

// SetIssuer sets field value
func (o *WellKnownAuth) SetIssuer(v string) {
	o.Issuer = v
}

// GetJwksUrl returns the JwksUrl field value
func (o *WellKnownAuth) GetJwksUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.JwksUrl
}

// GetJwksUrlOk returns a tuple with the JwksUrl field value
// and a boolean to check if the value has been set.
func (o *WellKnownAuth) GetJwksUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JwksUrl, true
}

// SetJwksUrl sets field value
func (o *WellKnownAuth) SetJwksUrl(v string) {
	o.JwksUrl = v
}

// GetScopes returns the Scopes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WellKnownAuth) GetScopes() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Scopes
}

// GetScopesOk returns a tuple with the Scopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WellKnownAuth) GetScopesOk() ([]string, bool) {
	if o == nil || IsNil(o.Scopes) {
		return nil, false
	}
	return o.Scopes, true
}

// HasScopes returns a boolean if a field has been set.
func (o *WellKnownAuth) HasScopes() bool {
	if o != nil && !IsNil(o.Scopes) {
		return true
	}

	return false
}

// SetScopes gets a reference to the given []string and assigns it to the Scopes field.
func (o *WellKnownAuth) SetScopes(v []string) {
	o.Scopes = v
}

func (o WellKnownAuth) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WellKnownAuth) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Audience.IsSet() {
		toSerialize["audience"] = o.Audience.Get()
	}
	toSerialize["client_id"] = o.ClientId
	toSerialize["device"] = o.Device
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	toSerialize["issuer"] = o.Issuer
	toSerialize["jwks_url"] = o.JwksUrl
	if o.Scopes != nil {
		toSerialize["scopes"] = o.Scopes
	}
	return toSerialize, nil
}

func (o *WellKnownAuth) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"client_id",
		"device",
		"issuer",
		"jwks_url",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWellKnownAuth := _WellKnownAuth{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varWellKnownAuth)

	if err != nil {
		return err
	}

	*o = WellKnownAuth(varWellKnownAuth)

	return err
}

type NullableWellKnownAuth struct {
	value *WellKnownAuth
	isSet bool
}

func (v NullableWellKnownAuth) Get() *WellKnownAuth {
	return v.value
}

func (v *NullableWellKnownAuth) Set(val *WellKnownAuth) {
	v.value = val
	v.isSet = true
}

func (v NullableWellKnownAuth) IsSet() bool {
	return v.isSet
}

func (v *NullableWellKnownAuth) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWellKnownAuth(val *WellKnownAuth) *NullableWellKnownAuth {
	return &NullableWellKnownAuth{value: val, isSet: true}
}

func (v NullableWellKnownAuth) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWellKnownAuth) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


